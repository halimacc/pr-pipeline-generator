---
groups:
- name: bosh-azure-cpi-release
  jobs:
  - recreate-infrastructure-primary
  - reset-resources
  - build-candidate
  - lifecycle
  - bats-ubuntu
  - promote-candidate
  - cleanup-on-success
  - release-pipeline-lock
jobs:
- name: recreate-infrastructure-primary
  serial: true
  plan:
  - aggregate:
    - trigger: false
      get: bosh-cpi-release
      resource: bosh-cpi-pr
      version: every
  - task: azure-provision
    file: bosh-cpi-release/ci/tasks/azure-provision.yml
    params:
      AZURE_CLIENT_ID: {{azure_client_id}}
      AZURE_CLIENT_SECRET: {{azure_client_secret}}
      AZURE_TENANT_ID: {{azure_tenant_id}}
      AZURE_GROUP_NAME_FOR_VMS: {{azure_group_name_for_vms}}
      AZURE_GROUP_NAME_FOR_NETWORK: {{azure_group_name_for_network}}
      AZURE_REGION_NAME: {{azure_region_name}}
      AZURE_VNET_NAME_FOR_BATS: {{azure_vnet_name_for_bats}}
      AZURE_VNET_NAME_FOR_LIFECYCLE: {{azure_vnet_name_for_lifecycle}}
      AZURE_REGION_SHORT_NAME: {{azure_region_short_name}}
      AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
      AZURE_BOSH_SUBNET_NAME: {{azure_bosh_subnet_name}}
      AZURE_CF_SUBNET_NAME: {{azure_cf_subnet_name}}
- name: reset-resources
  serial: true
  plan:
  - aggregate:
    - trigger: false
      get: bosh-cpi-release
      resource: bosh-cpi-pr
      version: every
  - task: reset-resources
    file: bosh-cpi-release/ci/tasks/reset-resources.yml
    params:
      AZURE_TENANT_ID: {{azure_tenant_id}}
      AZURE_CLIENT_ID: {{azure_client_id}}
      AZURE_CLIENT_SECRET: {{azure_client_secret}}
      AZURE_GROUP_NAME_FOR_VMS: {{azure_group_name_for_vms}}
      AZURE_GROUP_NAME_FOR_NETWORK: {{azure_group_name_for_network}}
      AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
      AZURE_VNET_NAME_FOR_BATS: {{azure_vnet_name_for_bats}}
      AZURE_VNET_NAME_FOR_LIFECYCLE: {{azure_vnet_name_for_lifecycle}}
      AZURE_BOSH_SUBNET_NAME: {{azure_bosh_subnet_name}}
      AZURE_CF_SUBNET_NAME: {{azure_cf_subnet_name}}
- name: build-candidate
  serial: true
  plan:
  - put: pipeline-lock
    params:
      acquire: true
  - aggregate:
    - trigger: false
      get: bosh-cpi-release
      resource: bosh-cpi-pr
      version: every
    - trigger: false
      get: version-semver
      params:
        bump: patch
  - do:
    - do:
      - task: generate-email-content
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ubuntu
          inputs:
          - name: bosh-cpi-release
          outputs:
          - name: email-content
          run:
            path: sh
            args:
            - "-c"
            - echo 'A new build has started' > email-content/subject && echo 'nobody' > email-content/body
      - put: email-notification
        params:
          subject: email-content/subject
          body: email-content/body
      - put: bosh-cpi-pr
        params:
          path: bosh-cpi-release
          status: pending
    - put: version-semver
      params:
        file: version-semver/number
    - task: build
      file: bosh-cpi-release/ci/tasks/build-candidate.yml
    - put: bosh-cpi-dev-artifacts
      params:
        file: candidate/*.tgz
    on_failure:
      do:
      - task: generate-email-content
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ubuntu
          inputs:
          - name: bosh-cpi-release
          outputs:
          - name: email-content
          run:
            path: sh
            args:
            - "-c"
            - echo 'Build failed at build-candidate' > email-content/subject && echo 'nobody' > email-content/body
      - put: email-notification
        params:
          subject: email-content/subject
          body: email-content/body
      - put: bosh-cpi-pr
        params:
          path: bosh-cpi-release
          status: failure
- name: lifecycle
  serial: true
  plan:
  - aggregate:
    - trigger: true
      passed:
      - build-candidate
      get: bosh-cpi-dev-artifacts
    - trigger: false
      passed:
      - build-candidate
      get: bosh-cpi-release
      resource: bosh-cpi-pr
      version: every
    - trigger: false
      get: stemcell
      resource: azure-ubuntu-stemcell
  - do:
    - task: test
      file: bosh-cpi-release/ci/tasks/run-lifecycle.yml
      params:
        AZURE_SUBSCRIPTION_ID: {{azure_subscription_id}}
        AZURE_CLIENT_ID: {{azure_client_id}}
        AZURE_CLIENT_SECRET: {{azure_client_secret}}
        AZURE_TENANT_ID: {{azure_tenant_id}}
        AZURE_GROUP_NAME_FOR_VMS: {{azure_group_name_for_vms}}
        AZURE_GROUP_NAME_FOR_NETWORK: {{azure_group_name_for_network}}
        AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
        AZURE_VNET_NAME_FOR_LIFECYCLE: {{azure_vnet_name_for_lifecycle}}
        AZURE_BOSH_SUBNET_NAME: {{azure_bosh_subnet_name}}
        AZURE_DEFAULT_SECURITY_GROUP: {{azure_default_security_group}}
        SSH_PUBLIC_KEY: {{ssh_public_key}}
    on_failure:
      do:
      - task: generate-email-content
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ubuntu
          inputs:
          - name: bosh-cpi-release
          outputs:
          - name: email-content
          run:
            path: sh
            args:
            - "-c"
            - echo 'Build failed at lifecycle' > email-content/subject && echo 'nobody' > email-content/body
      - put: email-notification
        params:
          subject: email-content/subject
          body: email-content/body
      - put: bosh-cpi-pr
        params:
          path: bosh-cpi-release
          status: failure
- name: bats-ubuntu
  serial: true
  plan:
  - aggregate:
    - trigger: true
      passed:
      - build-candidate
      get: bosh-cpi-dev-artifacts
    - trigger: false
      get: stemcell
      resource: azure-ubuntu-stemcell
    - trigger: false
      passed:
      - build-candidate
      get: bosh-cpi-release
      resource: bosh-cpi-pr
      version: every
    - trigger: false
      get: bats
    - trigger: false
      get: bosh-init
    - trigger: false
      passed:
      - build-candidate
      get: version-semver
      resource: version-semver
    - trigger: false
      get: bosh-release
  - do:
    - task: setup-director
      file: bosh-cpi-release/ci/tasks/setup-director.yml
      params:
        BASE_OS: ubuntu
        AZURE_SUBSCRIPTION_ID: {{azure_subscription_id}}
        AZURE_CLIENT_ID: {{azure_client_id}}
        AZURE_CLIENT_SECRET: {{azure_client_secret}}
        AZURE_TENANT_ID: {{azure_tenant_id}}
        AZURE_GROUP_NAME_FOR_VMS: {{azure_group_name_for_vms}}
        AZURE_GROUP_NAME_FOR_NETWORK: {{azure_group_name_for_network}}
        AZURE_VNET_NAME_FOR_BATS: {{azure_vnet_name_for_bats}}
        AZURE_STORAGE_ACCOUNT_NAME: {{azure_storage_account_name}}
        AZURE_BOSH_SUBNET_NAME: {{azure_bosh_subnet_name}}
        AZURE_DEFAULT_SECURITY_GROUP: {{azure_default_security_group}}
        BAT_NETWORK_GATEWAY: {{bat_network_gateway}}
        BAT_DIRECTOR_PASSWORD: {{bat_director_password}}
        SSH_PUBLIC_KEY: {{ssh_public_key}}
        SSH_PRIVATE_KEY: {{ssh_private_key}}
    - task: run-bats
      file: bosh-cpi-release/ci/tasks/run-bats.yml
      params:
        BASE_OS: ubuntu
        AZURE_CLIENT_ID: {{azure_client_id}}
        AZURE_CLIENT_SECRET: {{azure_client_secret}}
        AZURE_TENANT_ID: {{azure_tenant_id}}
        AZURE_GROUP_NAME: {{azure_group_name_for_network}}
        AZURE_VNET_NAME_FOR_BATS: {{azure_vnet_name_for_bats}}
        AZURE_CF_SUBNET_NAME: {{azure_cf_subnet_name}}
        AZURE_DEFAULT_SECURITY_GROUP: {{azure_default_security_group}}
        BAT_NETWORK_CIDR: {{bat_network_cidr}}
        BAT_NETWORK_RESERVED_RANGE: {{bat_network_reserved_range}}
        BAT_NETWORK_GATEWAY: {{bat_network_gateway}}
        BAT_NETWORK_STATIC_RANGE: {{bat_network_static_range}}
        BAT_NETWORK_STATIC_IP: {{bat_network_static_ip}}
        BAT_SECOND_STATIC_IP: {{bat_second_static_ip}}
        BAT_DIRECTOR_PASSWORD: {{bat_director_password}}
        BAT_VCAP_PASSWORD: {{bat_vcap_password}}
        SSH_PRIVATE_KEY: {{ssh_private_key}}
    - task: teardown-director
      file: bosh-cpi-release/ci/tasks/teardown-director.yml
    on_failure:
      do:
      - task: generate-email-content
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: ubuntu
          inputs:
          - name: bosh-cpi-release
          outputs:
          - name: email-content
          run:
            path: sh
            args:
            - "-c"
            - echo 'Build failed at bats-ubuntu' > email-content/subject && echo 'nobody' > email-content/body
      - put: email-notification
        params:
          subject: email-content/subject
          body: email-content/body
      - put: bosh-cpi-pr
        params:
          path: bosh-cpi-release
          status: failure
- name: promote-candidate
  plan:
  - aggregate:
    - trigger: false
      get: bosh-cpi-dev-artifacts
      passed:
      - lifecycle
      - bats-ubuntu
    - trigger: false
      get: bosh-cpi-release
      resource: bosh-cpi-release-out
    - trigger: false
      get: release-version-semver
      params:
        bump: major
  - task: promote
    file: bosh-cpi-release/ci/tasks/promote-candidate.yml
    params:
      S3_ACCESS_KEY_ID: {{s3_access_key__primary}}
      S3_SECRET_ACCESS_KEY: {{s3_secret_key__primary}}
  - put: bosh-cpi-release
    resource: bosh-cpi-release-out
    params:
      repository: promote/bosh-cpi-release
      rebase: true
      tag_prefix: v
      tag: promote/integer_version
  - put: release-version-semver
    params:
      file: release-version-semver/number
- name: cleanup-on-success
  plan:
  - get: bosh-cpi-pr
    trigger: true
    passed:
    - bats-ubuntu
    - lifecycle
  - do:
    - task: generate-email-content
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        inputs:
        - name: bosh-cpi-release
        outputs:
        - name: email-content
        run:
          path: sh
          args:
          - "-c"
          - echo 'Build passed' > email-content/subject && echo 'nobody' > email-content/body
    - put: email-notification
      params:
        subject: email-content/subject
        body: email-content/body
    - put: bosh-cpi-pr
      params:
        path: bosh-cpi-release
        status: success
  - do:
    - get: pipeline-lock
    - put: pipeline-lock
      params:
        release: pipeline-lock
- name: release-pipeline-lock
  plan:
  - get: pipeline-lock
  - put: pipeline-lock
    params:
      release: pipeline-lock
resources:
- name: bosh-cpi-dev-artifacts
  type: s3
  source:
    regexp: bosh-azure-cpi-([0-9\.]+).tgz
    bucket: {{s3_azure_cpi_pipeline_bucket}}
    region_name: {{s3_region__primary}}
    access_key_id: {{s3_access_key__primary}}
    secret_access_key: {{s3_secret_key__primary}}
- name: bosh-cpi-release-in
  type: git
  source:
    uri: git@github.com:halimacc/bosh-azure-cpi-release.git
    branch: update-ci
    private_key: {{github_deployment_key__bosh-azure-cpi-release}}
    ignore_paths:
    - ".final_builds/**/*.yml"
    - releases/**/*.yml
- name: bosh-cpi-release-out
  type: git
  source:
    uri: git@github.com:halimacc/bosh-azure-cpi-release.git
    branch: update-ci
    private_key: {{github_deployment_key__bosh-azure-cpi-release}}
- name: version-semver
  type: semver
  source:
    key: current-version
    bucket: {{s3_azure_cpi_pipeline_bucket}}
    access_key_id: {{s3_access_key__primary}}
    secret_access_key: {{s3_secret_key__primary}}
- name: release-version-semver
  type: semver
  source:
    key: release-current-version
    bucket: {{s3_azure_cpi_pipeline_bucket}}
    access_key_id: {{s3_access_key__primary}}
    secret_access_key: {{s3_secret_key__primary}}
- name: bosh-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh
- name: bosh-init
  type: s3
  source:
    regexp: bosh-init-([0-9\.]+)-linux-amd64
    bucket: {{s3_bosh_init_bucket}}
- name: bats
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
    branch: master
- name: azure-ubuntu-stemcell
  type: s3
  source:
    bucket: bosh-azure-stemcells
    regexp: bosh-stemcell-([0-9\.]+)-azure-hyperv-ubuntu-trusty-go_agent.tgz
- name: bosh-cpi-pr
  type: pull-request
  source:
    repo: halimacc/bosh-azure-cpi-release
    access_token: {{release_pr_access_token}}
    private_key: {{github_deployment_key__bosh-azure-cpi-release}}
    every: true
- name: email-notification
  type: email
  source:
    smtp:
      host: {{email_smtp_host}}
      port: {{email_smtp_port}}
      username: {{email_smtp_username}}
      password: {{email_smtp_password}}
    from: {{email_from}}
    to:
    - t-chhe@microsoft.com
- name: pipeline-lock
  type: pool
  source:
    uri: {{pipeline_lock_git_uri}}
    branch: {{pipeline_lock_branch}}
    pool: {{pipeline_lock_pool}}
    private_key: {{pipeline_lock_private_key}}
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource
